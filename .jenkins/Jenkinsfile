pipeline {
    agent any
    environment 
    {
        ECR_REPOSITORY = credentials('ECR_REPOSITORY')
        AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID')
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        IMAGE_TAG = 'latest'
    }
    stages {
        stage('Continuous Integration') {
            steps 
            {
                script
                {
                    echo "Linting repository"
                    echo "Running unit tests"
                }
            }
        }

        stage('Login to ECR') {
            steps 
            {   
                script 
                {
                    sh 'docker login -u AWS -p $(aws ecr get-login-password --region ap-south-1) ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com'
                }

            }
        }

        stage('Build Image') {
            steps 
            {   
                script 
                {
                    dockerImage = docker.build "${ECR_REPOSITORY}:${IMAGE_TAG}"
                }

            }
        }

        stage('Push Image') {
            steps 
            {   
                script 
                {
                    sh 'docker push ${ECR_REPOSITORY}:${IMAGE_TAG}'
                }

            }
        }
        
        stage('Sanity check') {
            steps {
                input "Does the environment look ok?"
            }
        }
                                      
        stage('Continuous Deployment') {
            steps 
            {
                
                sshagent(['ssh_key']) {
                    sh """ssh -o StrictHostKeyChecking=no -l ubuntu 15.206.122.83 'cd /home/ubuntu/ && pwd' """
                }
            }
        }
    }

    post {
        always
        {
            sh 'docker image prune -a -f'
        }
    }
}
